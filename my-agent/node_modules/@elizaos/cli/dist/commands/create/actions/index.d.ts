/**
 * Creates a new plugin with the specified name and configuration.
 */
declare function createPlugin(pluginName: string, targetDir: string, isNonInteractive?: boolean): Promise<void>;
/**
 * Creates a new agent character file with the specified name.
 */
declare function createAgent(agentName: string, targetDir: string, isNonInteractive?: boolean): Promise<void>;
/**
 * Creates a new TEE project with the specified name and configuration.
 */
declare function createTEEProject(projectName: string, targetDir: string, database: string, aiModel: string, embeddingModel?: string, isNonInteractive?: boolean): Promise<void>;
/**
 * Creates a new regular project with the specified name and configuration.
 */
declare function createProject(projectName: string, targetDir: string, database: string, aiModel: string, embeddingModel?: string, isNonInteractive?: boolean): Promise<void>;

/**
 * Creates necessary project directories.
 */
declare function createProjectDirectories(targetDir: string): Promise<void>;
/**
 * Sets up AI model configuration in the project's .env file based on user selection.
 */
declare function setupAIModelConfig(aiModel: string, envFilePath: string, isNonInteractive?: boolean): Promise<void>;
/**
 * Sets up embedding model configuration when the primary AI model doesn't support embeddings.
 */
declare function setupEmbeddingModelConfig(embeddingModel: string, envFilePath: string, isNonInteractive?: boolean): Promise<void>;
/**
 * Installs dependencies for the specified target directory.
 */
declare function installDependencies(targetDir: string): Promise<void>;
/**
 * Sets up the project environment including database and AI model configuration.
 */
declare function setupProjectEnvironment(targetDir: string, database: string, aiModel: string, embeddingModel?: string, isNonInteractive?: boolean): Promise<void>;

export { createAgent, createPlugin, createProject, createProjectDirectories, createTEEProject, installDependencies, setupAIModelConfig, setupEmbeddingModelConfig, setupProjectEnvironment };
