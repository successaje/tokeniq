// src/specs/v1/actionExample.ts
function convertContentToV1(content) {
  if (!content) {
    return { text: "" };
  }
  return {
    text: content.text || "",
    // V2 uses 'actions' array, V1 might use 'action' string
    action: Array.isArray(content.actions) && content.actions.length > 0 ? content.actions[0] : void 0,
    // Copy all other properties
    ...Object.entries(content).filter(([key]) => !["text", "actions", "action"].includes(key)).reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {})
  };
}
function convertContentToV2(content) {
  if (!content) {
    return { text: "" };
  }
  return {
    text: content.text || "",
    // V1 uses 'action' string, V2 uses 'actions' array
    actions: content.action ? [content.action] : [],
    // Copy all other properties
    ...Object.entries(content).filter(([key]) => !["text", "action"].includes(key)).reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {})
  };
}
function fromV2ActionExample(exampleV2) {
  if (!exampleV2) {
    return { user: "", content: { text: "" } };
  }
  return {
    user: exampleV2.name || "",
    content: convertContentToV1(exampleV2.content)
  };
}
function toV2ActionExample(example) {
  if (!example) {
    return { name: "", content: { text: "" } };
  }
  return {
    name: example.user || "",
    content: convertContentToV2(example.content)
  };
}

export {
  convertContentToV1,
  convertContentToV2,
  fromV2ActionExample,
  toV2ActionExample
};
