// src/specs/v1/templates.ts
function createTemplateFunction(template) {
  if (typeof template === "string") {
    return () => template;
  } else {
    return (state) => {
      if (!state) {
        return "";
      }
      return template({ state });
    };
  }
}
function processTemplate(template, state) {
  if (!template) {
    return "";
  }
  if (!state) {
    return typeof template === "string" ? template : "";
  }
  if (typeof template === "string") {
    return template;
  } else {
    return template({ state });
  }
}
function getTemplateValues(state, defaultValues) {
  if (!state || !state.values) {
    return defaultValues || {};
  }
  const stateValues = state.values;
  const defaults = defaultValues || {};
  return { ...defaults, ...stateValues };
}

export {
  createTemplateFunction,
  processTemplate,
  getTemplateValues
};
